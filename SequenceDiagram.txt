# Web sequence diagram
# https://www.websequencediagrams.com

title ICS372 - Program 2

note left of Controller: Application Launch
Controller->Application: beginTrial()
Application->FileReader: deserialize()
FileReader->Application: return deserialized data
Application->Trial: getInstance()
Trial->Application: return Trial instance
Application->Controller: return


loop User input loop
    opt UserSelection - Load New File
        Controller->Controller: fileChooser()
        Controller->Application: loadFile(fileName)
        Application->FileReader: loadFile(fileName)
        opt fileName = *.json
            FileReader->readJSON: read()
            readJSON->FileReader: return JSON data
        end
        opt fileName = *.xml
            FileReader->readXML: read()
            readXML->FileReader: return JSON data
        end
        FileReader->Application: return JSON data
        Application->Controller: return status
    end
    
    opt UserSelection - Export File
        Controller->Controller: fileChooser()
        Controller->Application: export(fileName)
        Application->FileWriter: write(fileName)
        FileWriter->FileWriter: export JSON
        FileWriter->Application: return status
        Application->Controller: return status
    end
    
    opt UserSelection - Activate Patient
        Controller->Controller: requestPatientID()
        Controller->Application: activate(patientID)
        Application->Trial: getInstance()
        Trial->Application: return Trial instance
        Application->Trial: activatePatient(patientID)
        Trial->Patient: activate()
        Patient->Trial: return status
        Trial->Application: return status
        Application->Controller: return status
    end
    
    opt UserSelection - Deactivate Patient
        Controller->Controller: requestPatientID()
        Controller->Application: deactivate(patientID)
        Application->Trial: getInstance()
        Trial->Application: return Trial instance
        Application->Trial: deactivatePatient(patientID)
        Trial->Patient: deactivate()
        Patient->Trial: return status
        Trial->Application: return status
        Application->Controller: return status
    end
    
    opt UserSelection - Add Reading
        Controller->Controller: requestReading()
        Controller->Application: addReading(readingType, readingID, patientID, readingValue, readingDate, clinicID)
        Application->Trial: getInstance()
        Trial->Application: return Trial instance
        Application->Trial: addReading(readingType, readingID, patientID, readingValue, readingDate, clinicID)
        Trial->Patient: new Reading(readingType, readingID, patientID, readingValue, readingDate, clinicID)
        Patient->Trial: return status
        Trial->Application: return status
        Application->Controller: return status
    end
    
    opt UserSelection - Add Clinic
        Controller->Controller: requestClinicInfo()
        Controller->Application: addClinic(clinicID, clinicName)
        Application->Trial: getInstance()
        Trial->Application: return Trial instance
        Application->Trial: addClinic(clinicID, clinicName)
        Trial->Patient: new Clinic(clinicID, clinicName)
        Patient->Trial: return status
        Trial->Application: return status
        Application->Controller: return status
    end
    
    opt UserSelection - Add Patient
        Controller->Controller: requestPatientID()
        Controller->Application: addPatient(patientID)
        Application->Trial: getInstance()
        Trial->Application: return Trial instance
        Application->Trial: addPatient(patientID)
        Trial->Patient: new Patient(patientID)
        Patient->Trial: return status
        Trial->Application: return status
        Application->Controller: return status
    end
    
    opt UserSelection - End Program
        Controller->Controller: getConfirmation
        Controller->Application: exit()
        Application->FileWriter: serialize(Trial.getInstance())
        FileWriter->Application: return status
        Application->Controller: return status
        Controller->Controller: self.exit()
    end
    
end