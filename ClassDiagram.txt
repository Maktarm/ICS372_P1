# UML code for class diagram
# render using https://www.planttext.com or PlantUML Renderer

@startuml

title Group Project 2 - Class Diagram


class Controller {
  .. Members ..
- PatientTrial: Application 

  .. Methods ..
+Controller(): Constructor
+ActionPerformed()
#createImageIcon()
-createAndShowGUI()
}

class Application {
    .. Members ..
    -Patients: List
    -Records: List
    -Clinics: List
    
    .. Methods ..
    +Application(): Constructor
    +LoadFile(String)
    +SaveFile(String)
    +AddClinic(String, String)
    +AddReading(String, String, String, Generic, Long)
    +AddPatient(String, String)
    +BeginStudy(String)
    +EndStudy(String)
}
class Record {
    .. Members ..
    -patient_id: String
    -reading_type: String
    -reading_id: String
    -reading_value: Generic
        //type dependent on reading_type
    -reading_date: longInt
        //UNIX time
    -reading_clinic: String 
    
    .. Methods ..
    +Record(): Constructor
    +Accessors/Mutators as appropriate
}
class Patient {
    .. Members ..
    -patient_id: String
    -patient_active: Boolean
    
    .. Methods ..
    +Patient(): Constructor
    +BeginStudy()
    +EndStudy()
    +Accessors/Mutators as appropriate
}

class Clinic {
    .. Members ..
    -clinicName: String
    -clinicID: String
    
    .. Methods ..
    +Clinic(): Constructor
    +Accessors/Mutators as appropriate
}

class FileReader {
    .. Members ..
    
    .. Methods ..
    -FileReader(): Constructor
    +read(String) : static function
}

class FileWriter {
    .. Members ..
    
    .. Methods ..
    -FileWriter(): Constructor
    +write(Object) : static function
}

class WriteJSON {
    .. Members ..
    
    .. Methods ..
    -WriteJSON(): Constructor
    +write(Object) : static function
}

class ReadJSON {
    .. Members ..
    
    .. Methods ..
    -ReadJSON(): Constructor
    +read(String) : static function
}

class ReadXML {
    .. Members ..
    
    .. Methods ..
    -ReadXML(): Constructor
    +read(String) : static function
}

note "These classes don't get instantiated, the just provide utility functions." as H2
FileReader .. H2
ReadJSON .. H2
ReadXML .. H2
FileWriter .. H2
WriteJSON .. H2

Controller "1" *-down- "1" Application
Application "1" *-down- "many" Patient
Application "1" *-down- "many" Clinic
Clinic "1" *-down- "many" Record
Record "many" *-- "1" Patient
Application <|-right- FileReader
FileReader <|-right- ReadXML
FileReader <|-right- ReadJSON
Application <|-right- FileWriter
FileWriter <|-right- WriteJSON

@enduml